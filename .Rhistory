gee_estimates %>%
filter(round(a^2 + c^2 + e^2,1) == 1) %>%
distinct()
gee_estimates %>%
filter(round(a^2 + c^2 + e^2,2) == 1) %>%
distinct()
gee_estimates %>%
filter(round(a^2 + c^2 + e^2, 2) == 1) %>%
distinct()
gee_power %>%
filter(round(a^2 + c^2 + e^2, 2) == 1) %>%
distinct()
mx_estimates %>%
filter(round(a^2 + c^2 + e^2, 2) == 1) %>%
distinct()
mx_power %>%
filter(round(a^2 + c^2 + e^2, 2) == 1) %>%
distinct()
geeestimates <- gee_estimates %>%
filter(round(a^2 + c^2 + e^2, 2) == 1) %>%
distinct()
geepower <- gee_power %>%
filter(round(a^2 + c^2 + e^2, 2) == 1) %>%
distinct()
mxestimates <- mx_estimates %>%
filter(round(a^2 + c^2 + e^2, 2) == 1) %>%
distinct()
mxpower <- mx_power %>%
filter(round(a^2 + c^2 + e^2, 2) == 1) %>%
distinct()
write.csv(mxestimates, file = "2024-05-08_mx_estimates_appendix.csv", row.names = TRUE)
write.csv(mxpower, file = "2024-05-08_mx_power_appendix.csv", row.names = TRUE)
write.csv(geeestimates, file = "2024-05-08_gee_estimates_appendix.csv", row.names = TRUE)
write.csv(mxestimates, file = "2024-05-08_mx_estimates_appendix.csv", row.names = TRUE)
write.csv(mxpower, file = "2024-05-08_mx_power_appendix.csv", row.names = TRUE)
write.csv(geeestimates, file = "2024-05-08_gee_estimates_appendix.csv", row.names = TRUE)
write.csv(geepower, file = "2024-05-08_gee_power_appendix.csv", row.names = TRUE)
library(tidyverse)
# Appendix data
app_mx_estimates <- read.csv("2024-05-08_mx_estimates_appendix.csv")
app_mx_power <- read.csv("2024-05-08_mx_power_appendix.csv")
app_gee_estimates <- read.csv("2024-05-08_gee_estimates_appendix.csv")
app_gee_power <- read.csv("2024-05-08_gee_power_appendix.csv")
p5_data <- app_gee_power %>%
filter(g == 0, a^2 == .4) %>%
select("b", "p5", 'prs') %>%
mutate(Variable = "CT")
p5_data <- app_gee_power %>%
filter(g == 0, a^2 == .4) %>%
select("b", "p5", 'PGS') %>%
mutate(Variable = "CT")
p6_data <- app_gee_power %>%
filter(b == 0) %>%
select("g", "p6", 'PGS') %>%
mutate(Variable = "SI")
# Create dataset
p5_data <- app_gee_power %>%
filter(g == 0, round(a^2,3) == .4) %>%
select("b", "p5", 'PGS') %>%
mutate(Variable = "CT")
p5_data <- app_gee_power %>%
filter(g == 0, round(a^2, 3) == .4) %>%
select("b", "p5", 'PGS') %>%
mutate(Variable = "CT")
p6_data <- app_gee_power %>%
filter(b == 0, round(a^2, 3) == .4) %>%
select("g", "p6", 'PGS') %>%
mutate(Variable = "SI")
colnames(p5_data)[1:2] <- c("Confounder", "Power")
colnames(p6_data)[1:2] <- c("Confounder", "Power")
gee_plot_data <- rbind(p5_data, p6_data)
ggplot(data = gee_plot_data, mapping = aes(x = Confounder, y = Power)) +
geom_line() +
geom_point() +
facet_wrap(~PGS)
View(gee_plot_data)
ggplot(data = gee_plot_data, mapping = aes(x = Confounder, y = Power, group = Variable)) +
geom_line() +
geom_point() +
facet_wrap(~PGS)
ggplot(data = gee_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable)) +
geom_line() +
geom_point() +
facet_wrap(~PGS)
ggplot(data = gee_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable)) +
geom_line() +
geom_point() +
facet_wrap(~PGS) +
theme_minimal()
ggplot(data = gee_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable)) +
geom_line() +
geom_point() +
facet_wrap(~PGS) +
theme_classic()
ggplot(data = gee_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable)) +
geom_line() +
geom_point() +
facet_wrap(~PGS) +
theme_light()
ggplot(data = gee_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable)) +
geom_line() +
geom_point() +
facet_wrap(~PGS) +
theme_minimal()
ggplot(data = gee_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable)) +
geom_line() +
geom_point() +
facet_wrap(~PGS) +
theme_light()
ggplot(data = gee_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable)) +
geom_line() +
geom_point(aes(shape = Variable)) +
facet_wrap(~PGS) +
theme_light()
p6_data_mx <- app_mx_power %>%
filter(g == 0, round(a^2, 3) == .4) %>%
select("b", "p6", 'PGS') %>%
mutate(Variable = "CT")
p7_data_mx <- app_mx_power %>%
filter(b == 0, round(a^2, 3) == .4) %>%
select("g", "p7", 'PGS') %>%
mutate(Variable = "SI")
colnames(p6_data_mx)[1:2] <- c("Confounder", "Power")
colnames(p7_data_mx)[1:2] <- c("Confounder", "Power")
gee_plot_data <- rbind(p6_data_mx, p7_data_mx)
library(tidyverse)
# Appendix data
app_mx_estimates <- read.csv("2024-05-08_mx_estimates_appendix.csv")
app_mx_power <- read.csv("2024-05-08_mx_power_appendix.csv")
app_gee_estimates <- read.csv("2024-05-08_gee_estimates_appendix.csv")
app_gee_power <- read.csv("2024-05-08_gee_power_appendix.csv")
# Create dataset for gee results
p5_data <- app_gee_power %>%
filter(g == 0, round(a^2, 3) == .4) %>%
select("b", "p5", 'PGS') %>%
mutate(Variable = "CT")
p6_data <- app_gee_power %>%
filter(b == 0, round(a^2, 3) == .4) %>%
select("g", "p6", 'PGS') %>%
mutate(Variable = "SI")
colnames(p5_data)[1:2] <- c("Confounder", "Power")
colnames(p6_data)[1:2] <- c("Confounder", "Power")
gee_plot_data <- rbind(p5_data, p6_data) %>%
mutate(Model = "Gee")
# Create same dataset for MX
p6_data_mx <- app_mx_power %>%
filter(g == 0, round(a^2, 3) == .4) %>%
select("b", "p6", 'PGS') %>%
mutate(Variable = "CT")
p7_data_mx <- app_mx_power %>%
filter(b == 0, round(a^2, 3) == .4) %>%
select("g", "p7", 'PGS') %>%
mutate(Variable = "SI")
colnames(p6_data_mx)[1:2] <- c("Confounder", "Power")
colnames(p7_data_mx)[1:2] <- c("Confounder", "Power")
mx_plot_data <- rbind(p6_data_mx, p7_data_mx) %>%
mutate(Model = "OpenMx")
View(mx_plot_data)
head(mx_plot_data)
head(gee_plot_data)
# Combine the two
full_plot_data <- merge(mx_plot_data, gee_plot_data, by = c("Confounder", "PGS", "Variable"), suffixes = c(".OpenMx", ".Gee"))
View(full_plot_data)
# Combine the two
full_plot_data <- merge(mx_plot_data, gee_plot_data, by = c("Confounder", "PGS", "Variable"), suffixes = c(".OpenMx", ".Gee"))
View(full_plot_data)
# Merge the data frames based on Confounder, PGS, and Variable
full_plot_data <- merge(mx_plot_data, gee_plot_data, by = c("Confounder", "PGS", "Variable"), suffixes = c(".OpenMx", ".Gee"))
# Remove the redundant 'Model' column
full_plot_data <- full_plot_data[, !grepl("Model", names(full_plot_data))]
# View the new data frame
head(full_plot_data)
ggplot(data = mx_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable)) +
geom_line() +
geom_point(aes(shape = Variable)) +
facet_wrap(~PGS) +
theme_light()
mx_plot_data %>%
filter(Variable == "CT") %>%
ggplot(data = ., mapping = aes(x = Confounder, y = Power)) +
geom_line() +
geom_point(aes(shape = Variable)) +
facet_wrap(~PGS) +
theme_light()
library(tidyverse)
# Appendix data
app_mx_estimates <- read.csv("2024-05-08_mx_estimates_appendix.csv")
app_mx_power <- read.csv("2024-05-08_mx_power_appendix.csv")
app_gee_estimates <- read.csv("2024-05-08_gee_estimates_appendix.csv")
app_gee_power <- read.csv("2024-05-08_gee_power_appendix.csv")
# Create dataset for gee results
p1_data <- app_gee_power %>%
filter(g == 0, round(a^2, 3) == .4) %>%
select("b", "p5", 'PGS') %>%
mutate(Variable = "CT")
p6_data <- app_gee_power %>%
filter(b == 0, round(a^2, 3) == .4) %>%
select("g", "p6", 'PGS') %>%
mutate(Variable = "SI")
colnames(p5_data)[1:2] <- c("Confounder", "Power")
colnames(p6_data)[1:2] <- c("Confounder", "Power")
gee_plot_data <- rbind(p5_data, p6_data) %>%
mutate(Model = "Gee")
# Create same dataset for MX
p1_data_mx <- app_mx_power %>%
filter(g == 0, round(a^2, 3) == .4) %>%
select("b", "p1", 'PGS') %>%
mutate(Variable = "CT")
p2_data_mx <- app_mx_power %>%
filter(b == 0, round(a^2, 3) == .4) %>%
select("g", "p2", 'PGS') %>%
mutate(Variable = "SI")
colnames(p6_data_mx)[1:2] <- c("Confounder", "Power")
colnames(p7_data_mx)[1:2] <- c("Confounder", "Power")
mx_plot_data <- rbind(p6_data_mx, p7_data_mx) %>%
mutate(Model = "OpenMx")
# Combine the two
# Merge the data frames based on Confounder, PGS, and Variable
full_plot_data <- merge(mx_plot_data, gee_plot_data, by = c("Confounder", "PGS", "Variable"), suffixes = c(".OpenMx", ".Gee"))
# Remove the 'Model' column
full_plot_data <- full_plot_data[, !grepl("Model", names(full_plot_data))]
# Plot for only MX results
mx_plot_data %>%
filter(Variable == "CT") %>%
ggplot(data = ., mapping = aes(x = Confounder, y = Power)) +
geom_line() +
geom_point(aes(shape = Variable)) +
facet_wrap(~PGS) +
theme_light()
View(app_mx_power)
library(tidyverse)
# Appendix data
app_mx_estimates <- read.csv("2024-05-08_mx_estimates_appendix.csv")
app_mx_power <- read.csv("2024-05-08_mx_power_appendix.csv")
app_gee_estimates <- read.csv("2024-05-08_gee_estimates_appendix.csv")
app_gee_power <- read.csv("2024-05-08_gee_power_appendix.csv")
# Create dataset for gee results
p5_data <- app_gee_power %>%
filter(g == 0, round(a^2, 3) == .4) %>%
select("b", "p5", 'PGS') %>%
mutate(Variable = "CT")
p6_data <- app_gee_power %>%
filter(b == 0, round(a^2, 3) == .4) %>%
select("g", "p6", 'PGS') %>%
mutate(Variable = "SI")
colnames(p5_data)[1:2] <- c("Confounder", "Power")
colnames(p6_data)[1:2] <- c("Confounder", "Power")
gee_plot_data <- rbind(p5_data, p6_data) %>%
mutate(Model = "Gee")
# Create same dataset for MX
p1_data_mx <- app_mx_power %>%
filter(g == 0, round(a^2, 3) == .4) %>%
select("b", "p1", 'PGS') %>%
mutate(Variable = "CT")
p2_data_mx <- app_mx_power %>%
filter(b == 0, round(a^2, 3) == .4) %>%
select("g", "p2", 'PGS') %>%
mutate(Variable = "SI")
colnames(p6_data_mx)[1:2] <- c("Confounder", "Power")
colnames(p7_data_mx)[1:2] <- c("Confounder", "Power")
mx_plot_data <- rbind(p6_data_mx, p7_data_mx) %>%
mutate(Model = "OpenMx")
# Combine the two
# Merge the data frames based on Confounder, PGS, and Variable
full_plot_data <- merge(mx_plot_data, gee_plot_data, by = c("Confounder", "PGS", "Variable"), suffixes = c(".OpenMx", ".Gee"))
# Remove the 'Model' column
full_plot_data <- full_plot_data[, !grepl("Model", names(full_plot_data))]
# Plot for only MX results
mx_plot_data %>%
filter(Variable == "CT") %>%
ggplot(data = ., mapping = aes(x = Confounder, y = Power)) +
geom_line() +
geom_point(aes(shape = Variable)) +
facet_wrap(~PGS) +
theme_light()
library(tidyverse)
# Appendix data
app_mx_estimates <- read.csv("2024-05-08_mx_estimates_appendix.csv")
app_mx_power <- read.csv("2024-05-08_mx_power_appendix.csv")
app_gee_estimates <- read.csv("2024-05-08_gee_estimates_appendix.csv")
app_gee_power <- read.csv("2024-05-08_gee_power_appendix.csv")
# Create dataset for gee results
p5_data <- app_gee_power %>%
filter(g == 0, round(a^2, 3) == .4) %>%
select("b", "p5", 'PGS') %>%
mutate(Variable = "CT")
p6_data <- app_gee_power %>%
filter(b == 0, round(a^2, 3) == .4) %>%
select("g", "p6", 'PGS') %>%
mutate(Variable = "SI")
colnames(p5_data)[1:2] <- c("Confounder", "Power")
colnames(p6_data)[1:2] <- c("Confounder", "Power")
gee_plot_data <- rbind(p5_data, p6_data) %>%
mutate(Model = "Gee")
# Create same dataset for MX
p1_data_mx <- app_mx_power %>%
filter(g == 0, round(a^2, 3) == .4) %>%
select("b", "p1", 'PGS') %>%
mutate(Variable = "CT")
p2_data_mx <- app_mx_power %>%
filter(b == 0, round(a^2, 3) == .4) %>%
select("g", "p2", 'PGS') %>%
mutate(Variable = "SI")
colnames(p1_data_mx)[1:2] <- c("Confounder", "Power")
colnames(p2_data_mx)[1:2] <- c("Confounder", "Power")
mx_plot_data <- rbind(p1_data_mx, p2_data_mx) %>%
mutate(Model = "OpenMx")
# Combine the two
# Merge the data frames based on Confounder, PGS, and Variable
full_plot_data <- merge(mx_plot_data, gee_plot_data, by = c("Confounder", "PGS", "Variable"), suffixes = c(".OpenMx", ".Gee"))
# Remove the 'Model' column
full_plot_data <- full_plot_data[, !grepl("Model", names(full_plot_data))]
# Plot for only MX results
ggplot(data = mx_plot_data, mapping = aes(x = Confounder, y = Power)) +
geom_line() +
geom_point(aes(shape = Variable)) +
facet_wrap(~PGS) +
theme_light()
ggplot(data = mx_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable)) +
geom_line() +
geom_point(aes(shape = Variable)) +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, colour = Variable)) +
geom_line(aes(y = Power.Gee)) +
geom_point(aes(shape = Variable)) +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, colour = Variable)) +
geom_line(aes(y = Power.Gee)) +
geom_point(aes(shape = Variable, y = Power.Gee)) +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, colour = Variable)) +
geom_line(aes(y = Power.Gee)) +
geom_point(aes(shape = Variable, y = Power.Gee)) +
geom_line(aes(y = Power.OpenMx)) +
geom_point(aes(shape = Variable, y = Power.OpenMx)) +
facet_wrap(~PGS) +
theme_light()
# Combine the two
# Merge the data frames based on Confounder, PGS, and Variable
full_plot_data <- rbind(mx_plot_data, gee_plot_data)
ggplot(data = full_plot_data, mapping = aes(x = Confounder, colour = Variable)) +
geom_line() +
geom_point() +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable)) +
geom_line() +
geom_point() +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable)) +
geom_line(aes(group = Model)) +
geom_point() +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable)) +
geom_point() +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable + Model)) +
geom_point() +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power)) +
geom_point() +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = interaction(Model, Variable))) +
geom_point() +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = interaction(Model, Variable))) +
geom_point() +
geom_line() +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable)) +
geom_point() +
geom_line() +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_point() +
geom_line() +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_point() +
geom_line() +
facet_wrap(~PGS) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_point() +
geom_line() +
facet_wrap(~PGS) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
scale_color_manual(values = c("CT" = "black", "SI" = "darkgrey"))
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_point() +
geom_line() +
facet_wrap(~PGS) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
scale_color_manual(values = c("CT" = "black", "SI" = "darkgrey")) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_point() +
geom_line() +
facet_wrap(~PGS) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_line() +
geom_point() +
facet_wrap(~PGS) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_line(size = 3) +
geom_point() +
facet_wrap(~PGS) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_line(linewidth = 3) +
geom_point() +
facet_wrap(~PGS) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_line(linewidth = 1) +
geom_point() +
facet_wrap(~PGS) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~scales::percent(PGS)) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~scales::percent(order(PGS))) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~scales::percent(PGS)) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
theme_light()
# Combine the two
# Merge the data frames based on Confounder, PGS, and Variable
full_plot_data <- rbind(mx_plot_data, gee_plot_data)
# Plot for only MX results
full_plot_data$PGS_percent <- percent(full_plot_data$PGS)
full_plot_data <- rbind(mx_plot_data, gee_plot_data)
# Plot for only MX results
full_plot_data$PGS_percent <- scales::percent(full_plot_data$PGS)
full_plot_data$PGS_percent <- factor(full_plot_data$PGS_percent, levels = c("2%", "5%", "10%", "15%"))
ggplot(data = mx_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable)) +
geom_line() +
geom_point(aes(shape = Variable)) +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
theme_light()
ggplot(data = mx_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable)) +
geom_line(linewidth = 0.8) +
geom_point(aes(shape = Variable)) +
facet_wrap(~PGS) +
theme_light()
ggplot(data = mx_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable)) +
geom_line(linewidth = 0.8) +
geom_point(aes(shape = Variable)) +
facet_wrap(~PGS_percent) +
theme_light()
# Plot for only MX results
full_plot_data$PGS_percent <- scales::percent(full_plot_data$PGS)
full_plot_data$PGS_percent <- factor(full_plot_data$PGS_percent, levels = c("2%", "5%", "10%", "15%"))
mx_plot_data$PGS_percent <- scales::percent(full_plot_data$PGS)
# Plot for only MX results
full_plot_data$PGS_percent <- scales::percent(full_plot_data$PGS)
full_plot_data$PGS_percent <- factor(full_plot_data$PGS_percent, levels = c("2%", "5%", "10%", "15%"))
mx_plot_data$PGS_percent <- scales::percent(mx_plot_data$PGS)
mx_plot_data$PGS_percent <- factor(mx_plot_data$PGS_percent, levels = c("2%", "5%", "10%", "15%"))
ggplot(data = mx_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable)) +
geom_line(linewidth = 0.8) +
geom_point(aes(shape = Variable)) +
facet_wrap(~PGS_percent) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
theme_light()
