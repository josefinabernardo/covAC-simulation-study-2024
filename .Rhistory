<<<<<<< Updated upstream
=======
rename(Confounder = g, Power = p2)
gee_mzdz_data <- rbind(p1_gee_data, p2_gee_data) %>%
mutate(PGS_percent = factor(scales::percent(PGS), levels = c("2%", "5%", "10%", "15%"))) %>%
mutate(Method = "Gee")
mx_mzdz_data <- mx_mzdz_data %>%
mutate(Method = "OpenMx")
full_method_data <- rbind(mx_mzdz_data, gee_mzdz_data)
ggplot(data = full_method_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Method)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
jtools::theme_apa() +
theme(text = element_text(family = "serif"))
paper_power <- read.csv("paper_mx_power.csv")
paper_estimates <- read.csv("paper_mx_estimates.csv")
# Plot 1 - MZ & DZ Power
library(tidyverse)
p1_mx_data <- paper_power %>%
filter(g == 0) %>%
dplyr::select("b", "p1", "PGS") %>%
mutate(Variable = "CT", Sample = "MZ & DZ") %>%
rename(Confounder = b, Power = p1)
p2_mx_data <- paper_power %>%
filter(b == 0) %>%
dplyr::select("g", "p2", 'PGS') %>%
mutate(Variable = "SI", Sample = "MZ & DZ") %>%
rename(Confounder = g, Power = p2)
mx_mzdz_data <- rbind(p1_mx_data, p2_mx_data) %>%
mutate(PGS_percent = factor(scales::percent(PGS), levels = c("2%", "5%", "10%", "15%")))
ggplot(data = mx_mzdz_data, mapping = aes(x = Confounder, y = Power, color = Variable)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
jtools::theme_apa() +
theme(text = element_text(family = "serif"))
# Plot 2 - MZ & DZ vs. DZ-only Power
p5_mx_data <- paper_power %>%
filter(g == 0) %>%
dplyr::select("b", "p5", "PGS") %>%
mutate(Variable = "CT", Sample = "DZ") %>%
rename(Confounder = b, Power = p5)
p6_mx_data <- paper_power %>%
filter(b == 0) %>%
dplyr::select("g", "p6", 'PGS') %>%
mutate(Variable = "SI", Sample = "DZ") %>%
rename(Confounder = g, Power = p6)
mx_dz_data <- rbind(p5_mx_data, p6_mx_data) %>%
mutate(PGS_percent = factor(scales::percent(PGS), levels = c("2%", "5%", "10%", "15%")))
full_mx_data <- rbind(mx_mzdz_data, mx_dz_data)
ggplot(data = full_mx_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Sample)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("DZ" = "dotted", "MZ & DZ" = "solid")) +
jtools::theme_apa() +
theme(text = element_text(family = "serif"))
# Plot 3
ext_estimates <- read.csv("2024-06-04_mx_estimates_ext.csv")
ext_power <- read.csv("2024-06-04_mx_power_ext.csv")
ext_power <- ext_power %>%
rename(`CT` = g, `SI` = b, `CT (m1)` = p1,
`SI (m2)` = p2, `CT (m3)` = p3, `SI (m3)` = p4)
data_noCT <- ext_power[ext_power$CT == 0, ]
# Gather the data for plotting
data_noCT_long <- gather(data_noCT, key = "variable", value = "value",`CT (m1)`, `SI (m2)`, `CT (m3)`, `SI (m3)`)
# Create the plot
ggplot(data_noCT_long, aes(x = SI, y = value, color = variable)) +
geom_line() +
geom_point() +
labs(title = NULL,
x = "Sibling Interaction",
y = "Power",
color = "Parameter") +
jtools::theme_apa() +
theme(text = element_text(family = "serif"))
# Plot 4
# Filter the data for b = 0
data_noSI <- ext_power[ext_power$SI== 0, ]
# Gather the data for plotting
data_noSI_long <- gather(data_noSI, key = "variable", value = "value", `CT (m1)`, `SI (m2)`, `CT (m3)`, `SI (m3)`)
# Create the plot
ggplot(data_noSI_long, aes(x = CT, y = value, color = variable)) +
geom_line() +
geom_point() +
labs(title = NULL,
x = "Cultural Transmission",
y = "Power",
color = "Parameter") +
jtools::theme_apa() +
theme(text = element_text(family = "serif"))
# Plot 5
gee_power <- read.csv("paper_gee_power.csv")
gee_est <- read.csv("paper_gee_estimates.csv")
p1_gee_data <- gee_power %>%
filter(g == 0) %>%
dplyr::select("b", "p1", "PGS") %>%
mutate(Variable = "CT", Sample = "MZ & DZ") %>%
rename(Confounder = b, Power = p1)
p2_gee_data <- gee_power %>%
filter(b == 0) %>%
dplyr::select("g", "p2", 'PGS') %>%
mutate(Variable = "SI", Sample = "MZ & DZ") %>%
rename(Confounder = g, Power = p2)
gee_mzdz_data <- rbind(p1_gee_data, p2_gee_data) %>%
mutate(PGS_percent = factor(scales::percent(PGS), levels = c("2%", "5%", "10%", "15%"))) %>%
mutate(Method = "Gee")
mx_mzdz_data <- mx_mzdz_data %>%
mutate(Method = "OpenMx")
full_method_data <- rbind(mx_mzdz_data, gee_mzdz_data)
ggplot(data = full_method_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Method)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
jtools::theme_apa() +
theme(text = element_text(family = "serif"))
cor(paper_power[p1:p8], gee_power[p1:p8])
cor(paper_power[´p1´:´p8´], gee_power[´p1´:´p8´])
cor(paper_power[, 'p1':'p8'], gee_power[, 'p1':'p8'])
# Debugging script
cor_vec <- cor(paper_power['p1':'p8'], gee_power['p1':'p8'])
cor(paper_power['p1':'p8'], gee_power['p1':'p8'])
View(gee_power)
cor(paper_power[,12:20], gee_power[,12:20])
# Debugging script
cor_vec <- diag(cor(paper_power[,12:20], gee_power[,12:20]))
print(round(cor_vec, 3))
print(round(cor_vec, 4))
print(p)
for (var in vars) {
p <- ggplot() +
geom_point(aes(x = paper_power[[var]], y = gee_power[[var]], color = paper_power[[group_var]])) +
labs(
title = paste("Scatterplot of", var, "vs", var),
x = paste("paper_power", var),
y = paste("gee_power", var),
caption = paste("Correlation:", round(corr, 2))
) +
theme_minimal() +
scale_color_discrete(name = "Group")
print(p)
}
# Scatterplots
vars <- paste0("p", 1:8)
for (var in vars) {
p <- ggplot() +
geom_point(aes(x = paper_power[[var]], y = gee_power[[var]], color = paper_power[[group_var]])) +
labs(
title = paste("Scatterplot of", var, "vs", var),
x = paste("OpenMx", var),
y = paste("Gee", var)
) +
theme_minimal() +
scale_color_discrete(name = "Group")
print(p)
}
p <- ggplot() +
geom_point(aes(x = paper_power[[var]], y = gee_power[[var]], color = paper_powe$g)) +
labs(
title = paste("Scatterplot of", var, "vs", var),
x = paste("OpenMx", var),
y = paste("Gee", var)
) +
theme_minimal() +
scale_color_discrete(name = "Group")
p <- ggplot() +
geom_point(aes(x = paper_power$var, y = gee_power$var, color = paper_powe$g)) +
labs(
title = paste("Scatterplot of", var, "vs", var),
x = paste("OpenMx", var),
y = paste("Gee", var)
) +
theme_minimal() +
scale_color_discrete(name = "Group")
p <- ggplot() +
geom_point(aes(x = paper_power$var, y = gee_power$var, color = paper_power$g)) +
labs(
title = paste("Scatterplot of", var, "vs", var),
x = paste("OpenMx", var),
y = paste("Gee", var)
) +
theme_minimal() +
scale_color_discrete(name = "Group")
for (var in vars) {
p <- ggplot() +
geom_point(aes_string(x = paste0("paper_power$", var), y = paste0("gee_power$", var), color = "paper_power$g")) +
labs(
title = paste("Scatterplot of", var, "vs", var),
x = paste("OpenMx", var),
y = paste("Gee", var)
) +
theme_minimal() +
scale_color_discrete(name = "Group")
print(p)
}
for (var in vars) {
p <- ggplot() +
geom_point(aes_string(x = paste0("paper_power$", var), y = paste0("gee_power$", var), color = "paper_power$g")) +
labs(
title = paste("Scatterplot of", var, "vs", var),
x = paste("OpenMx", var),
y = paste("Gee", var)
) +
theme_minimal() +
scale_color_continuous(name = "Group")
print(p)
}
p <- ggplot() +
geom_point(aes_string(x = paste0("paper_power$", var), y = paste0("gee_power$", var), color = "paper_power$g")) +
labs(
title = paste("Scatterplot of", var, "vs", var),
x = paste("OpenMx", var),
y = paste("Gee", var)
) +
theme_minimal() +
scale_color_viridis_c(name = "Group")
for (var in vars) {
p <- ggplot() +
geom_point(aes_string(x = paste0("paper_power$", var), y = paste0("gee_power$", var), color = "paper_power$g")) +
labs(
title = paste("Scatterplot of", var, "vs", var),
x = paste("OpenMx", var),
y = paste("Gee", var)
) +
theme_minimal() +
scale_color_viridis_c(name = "Group")
print(p)
}
paper_power <- read.csv("paper_mx_power.csv")
paper_estimates <- read.csv("paper_mx_estimates.csv")
# Plot 1 - MZ & DZ Power
library(tidyverse)
p1_mx_data <- paper_power %>%
filter(g == 0) %>%
dplyr::select("b", "p1", "PGS") %>%
mutate(Variable = "CT", Sample = "MZ & DZ") %>%
rename(Confounder = b, Power = p1)
p2_mx_data <- paper_power %>%
filter(b == 0) %>%
dplyr::select("g", "p2", 'PGS') %>%
mutate(Variable = "SI", Sample = "MZ & DZ") %>%
rename(Confounder = g, Power = p2)
mx_mzdz_data <- rbind(p1_mx_data, p2_mx_data) %>%
mutate(PGS_percent = factor(scales::percent(PGS), levels = c("2%", "5%", "10%", "15%")))
ggplot(data = mx_mzdz_data, mapping = aes(x = Confounder, y = Power, color = Variable)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
jtools::theme_apa() +
theme(text = element_text(family = "serif"))
# Plot 2 - MZ & DZ vs. DZ-only Power
p5_mx_data <- paper_power %>%
filter(g == 0) %>%
dplyr::select("b", "p5", "PGS") %>%
mutate(Variable = "CT", Sample = "DZ") %>%
rename(Confounder = b, Power = p5)
p6_mx_data <- paper_power %>%
filter(b == 0) %>%
dplyr::select("g", "p6", 'PGS') %>%
mutate(Variable = "SI", Sample = "DZ") %>%
rename(Confounder = g, Power = p6)
mx_dz_data <- rbind(p5_mx_data, p6_mx_data) %>%
mutate(PGS_percent = factor(scales::percent(PGS), levels = c("2%", "5%", "10%", "15%")))
full_mx_data <- rbind(mx_mzdz_data, mx_dz_data)
ggplot(data = full_mx_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Sample)) +
geom_line(linewidth = 0.8) +
geom_point() +
>>>>>>> Stashed changes
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("DZ" = "dotted", "MZ & DZ" = "solid")) +
jtools::theme_apa() +
theme(text = element_text(family = "serif"))
# Plot 3
ext_estimates <- read.csv("2024-06-04_mx_estimates_ext.csv")
ext_power <- read.csv("2024-06-04_mx_power_ext.csv")
ext_power <- ext_power %>%
rename(`CT` = g, `SI` = b, `CT (m1)` = p1,
`SI (m2)` = p2, `CT (m3)` = p3, `SI (m3)` = p4)
data_noCT <- ext_power[ext_power$CT == 0, ]
# Gather the data for plotting
data_noCT_long <- gather(data_noCT, key = "variable", value = "value",`CT (m1)`, `SI (m2)`, `CT (m3)`, `SI (m3)`)
# Create the plot
ggplot(data_noCT_long, aes(x = SI, y = value, color = variable)) +
geom_line() +
geom_point() +
labs(title = NULL,
x = "Sibling Interaction",
y = "Power",
color = "Parameter") +
jtools::theme_apa() +
theme(text = element_text(family = "serif"))
# Plot 4
# Filter the data for b = 0
data_noSI <- ext_power[ext_power$SI== 0, ]
# Gather the data for plotting
data_noSI_long <- gather(data_noSI, key = "variable", value = "value", `CT (m1)`, `SI (m2)`, `CT (m3)`, `SI (m3)`)
# Create the plot
ggplot(data_noSI_long, aes(x = CT, y = value, color = variable)) +
geom_line() +
geom_point() +
labs(title = NULL,
x = "Cultural Transmission",
y = "Power",
color = "Parameter") +
jtools::theme_apa() +
theme(text = element_text(family = "serif"))
# Plot 5
gee_power <- read.csv("paper_gee_power.csv")
gee_est <- read.csv("paper_gee_estimates.csv")
p1_gee_data <- gee_power %>%
filter(g == 0) %>%
dplyr::select("b", "p1", "PGS") %>%
mutate(Variable = "CT", Sample = "MZ & DZ") %>%
rename(Confounder = b, Power = p1)
p2_gee_data <- gee_power %>%
filter(b == 0) %>%
dplyr::select("g", "p2", 'PGS') %>%
mutate(Variable = "SI", Sample = "MZ & DZ") %>%
rename(Confounder = g, Power = p2)
gee_mzdz_data <- rbind(p1_gee_data, p2_gee_data) %>%
mutate(PGS_percent = factor(scales::percent(PGS), levels = c("2%", "5%", "10%", "15%"))) %>%
mutate(Method = "Gee")
mx_mzdz_data <- mx_mzdz_data %>%
mutate(Method = "OpenMx")
full_method_data <- rbind(mx_mzdz_data, gee_mzdz_data)
ggplot(data = full_method_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Method)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
jtools::theme_apa() +
theme(text = element_text(family = "serif"))
# Debugging script
# Correlations
cor_vec <- diag(cor(paper_power[,12:20], gee_power[,12:20]))
print(round(cor_vec, 4))
# Scatterplots
vars <- paste0("p", 1:8)
for (var in vars) {
p <- ggplot() +
geom_point(aes_string(x = paste0("paper_power$", var), y = paste0("gee_power$", var), color = "paper_power$g")) +
labs(
title = paste("Scatterplot of", var, "vs", var),
x = paste("OpenMx", var),
y = paste("Gee", var)
) +
theme_minimal() +
scale_color_viridis_c(name = "Group")
print(p)
}
# Scatterlots only with p1
for (var in vars) {
p <- ggplot() +
geom_point(aes_string(x = paste0("paper_power$", var), y = gee_power$p1, color = "paper_power$g")) +
labs(
title = paste("Scatterplot of", var, "vs p1"),
x = paste("OpenMx", var),
y = paste("Gee 1")
) +
theme_minimal() +
scale_color_viridis_c(name = "Group")
print(p)
}
# Install all packages
detach("package:gnomesims", unload = TRUE)
devtools::install_github("josefinabernardo/gnomesims")
# Install all packages
detach("package:gnomesims", unload = TRUE)
devtools::install_github("josefinabernardo/gnomesims")
gee_data <- gnomesims::gnome_gee_simulation(ct = seq(0,.1,.02), si = seq(0,.1,.02),
nloci = 100,
npgsloci = c(2, 5, 10, 15))
gee_power <- gee_data$power
gee_estimates <- gee_data$params
write.csv(gee_estimates, file = "paper_gee_estimates.csv", row.names = TRUE)
write.csv(gee_power, file = "paper_gee_power.csv", row.names = TRUE)
paper_power <- read.csv("paper_mx_power.csv")
paper_estimates <- read.csv("paper_mx_estimates.csv")
# Plot 1 - MZ & DZ Power
library(tidyverse)
p1_mx_data <- paper_power %>%
filter(g == 0) %>%
dplyr::select("b", "p1", "PGS") %>%
mutate(Variable = "CT", Sample = "MZ & DZ") %>%
rename(Confounder = b, Power = p1)
p2_mx_data <- paper_power %>%
filter(b == 0) %>%
dplyr::select("g", "p2", 'PGS') %>%
mutate(Variable = "SI", Sample = "MZ & DZ") %>%
rename(Confounder = g, Power = p2)
mx_mzdz_data <- rbind(p1_mx_data, p2_mx_data) %>%
mutate(PGS_percent = factor(scales::percent(PGS), levels = c("2%", "5%", "10%", "15%")))
ggplot(data = mx_mzdz_data, mapping = aes(x = Confounder, y = Power, color = Variable)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
jtools::theme_apa() +
theme(text = element_text(family = "serif"))
# Plot 2 - MZ & DZ vs. DZ-only Power
p5_mx_data <- paper_power %>%
filter(g == 0) %>%
dplyr::select("b", "p5", "PGS") %>%
mutate(Variable = "CT", Sample = "DZ") %>%
rename(Confounder = b, Power = p5)
p6_mx_data <- paper_power %>%
filter(b == 0) %>%
dplyr::select("g", "p6", 'PGS') %>%
mutate(Variable = "SI", Sample = "DZ") %>%
rename(Confounder = g, Power = p6)
mx_dz_data <- rbind(p5_mx_data, p6_mx_data) %>%
mutate(PGS_percent = factor(scales::percent(PGS), levels = c("2%", "5%", "10%", "15%")))
full_mx_data <- rbind(mx_mzdz_data, mx_dz_data)
ggplot(data = full_mx_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Sample)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("DZ" = "dotted", "MZ & DZ" = "solid")) +
jtools::theme_apa() +
theme(text = element_text(family = "serif"))
# Plot 3
ext_estimates <- read.csv("2024-06-04_mx_estimates_ext.csv")
ext_power <- read.csv("2024-06-04_mx_power_ext.csv")
ext_power <- ext_power %>%
rename(`CT` = g, `SI` = b, `CT (m1)` = p1,
`SI (m2)` = p2, `CT (m3)` = p3, `SI (m3)` = p4)
data_noCT <- ext_power[ext_power$CT == 0, ]
# Gather the data for plotting
data_noCT_long <- gather(data_noCT, key = "variable", value = "value",`CT (m1)`, `SI (m2)`, `CT (m3)`, `SI (m3)`)
# Create the plot
ggplot(data_noCT_long, aes(x = SI, y = value, color = variable)) +
geom_line() +
geom_point() +
labs(title = NULL,
x = "Sibling Interaction",
y = "Power",
color = "Parameter") +
jtools::theme_apa() +
theme(text = element_text(family = "serif"))
# Plot 4
# Filter the data for b = 0
data_noSI <- ext_power[ext_power$SI== 0, ]
# Gather the data for plotting
data_noSI_long <- gather(data_noSI, key = "variable", value = "value", `CT (m1)`, `SI (m2)`, `CT (m3)`, `SI (m3)`)
# Create the plot
ggplot(data_noSI_long, aes(x = CT, y = value, color = variable)) +
geom_line() +
geom_point() +
labs(title = NULL,
x = "Cultural Transmission",
y = "Power",
color = "Parameter") +
jtools::theme_apa() +
theme(text = element_text(family = "serif"))
# Plot 5
gee_power <- read.csv("paper_gee_power.csv")
gee_est <- read.csv("paper_gee_estimates.csv")
p1_gee_data <- gee_power %>%
filter(g == 0) %>%
dplyr::select("b", "p1", "PGS") %>%
mutate(Variable = "CT", Sample = "MZ & DZ") %>%
rename(Confounder = b, Power = p1)
p2_gee_data <- gee_power %>%
filter(b == 0) %>%
dplyr::select("g", "p2", 'PGS') %>%
mutate(Variable = "SI", Sample = "MZ & DZ") %>%
rename(Confounder = g, Power = p2)
gee_mzdz_data <- rbind(p1_gee_data, p2_gee_data) %>%
mutate(PGS_percent = factor(scales::percent(PGS), levels = c("2%", "5%", "10%", "15%"))) %>%
mutate(Method = "Gee")
mx_mzdz_data <- mx_mzdz_data %>%
mutate(Method = "OpenMx")
full_method_data <- rbind(mx_mzdz_data, gee_mzdz_data)
ggplot(data = full_method_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Method)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
jtools::theme_apa() +
theme(text = element_text(family = "serif"))
# Correlations
cor_vec <- diag(cor(paper_power[,12:20], gee_power[,12:20]))
print(round(cor_vec, 4))
# Scatterplots
vars <- paste0("p", 1:8)
for (var in vars) {
p <- ggplot() +
geom_point(aes_string(x = paste0("paper_power$", var), y = paste0("gee_power$", var), color = "paper_power$g")) +
labs(
title = paste("Scatterplot of", var, "vs", var),
x = paste("OpenMx", var),
y = paste("Gee", var)
) +
theme_minimal() +
scale_color_viridis_c(name = "Group")
print(p)
}
# Scatterlots only with p1
for (var in vars) {
p <- ggplot() +
geom_point(aes_string(x = paste0("paper_power$", var), y = gee_power$p1, color = "paper_power$g")) +
labs(
title = paste("Scatterplot of", var, "vs p1"),
x = paste("OpenMx", var),
y = paste("Gee 1")
) +
theme_minimal() +
scale_color_viridis_c(name = "Group")
print(p)
}
# Correlations
cor_vec <- diag(cor(paper_power[,12:19], gee_power[,12:19]))
print(round(cor_vec, 4))
<<<<<<< Updated upstream
# Install all packages
# detach("package:gnomesims", unload = TRUE)
devtools::install_github("josefinabernardo/gnomesims", force = TRUE)
library(gnomesims)
library(OpenMx)
# Plot 5 - new version
plot5_mx_data <- gnomesims::gnome_mx_simulation(ct = seq(0,.1,.02), si = seq(0,.1,.025),
nloci = 100,
npgsloci = c(2, 5, 10, 15))
# Plot 5 - new version
plot5_mx_data <- gnomesims::gnome_mx_simulation(ct = seq(0,.1,.02), si = seq(0,.1,.025),
nloci = 100,
npgsloci = c(2, 5, 10, 15))
plot5_mx_data <- gnomesims::gnome_mx_simulation(ct = seq(0,.1,.025), si = seq(0,.1,.025),
nloci = 100,
npgsloci = c(2, 5, 10, 15))
plot5_gee_data <- gnomesims::gnome_gee_simulation(ct = seq(0,.1,.025), si = seq(0,.1,.025),
nloci = 100,
npgsloci = c(2, 5, 10, 15))
plot5_mx_power <- plot5_mx_data$power
plot5_mx_estimates <- plot5_mx_data$params
plot5_gee_power <- plot5_gee_data$power
plot5_gee_estimates <- plot5_gee_data$params
write.csv(plot5_mx_power, "plot5_mx_power_estimates.csv", row.names = FALSE)
write.csv(plot5_mx_estimates, "plot5_mx_parameter_estimates.csv", row.names = FALSE)
write.csv(plot5_gee_power, "plot5_gee_power_estimates.csv", row.names = FALSE)
write.csv(plot5_gee_estimates, "plot5_gee_parameter_estimates.csv", row.names = FALSE)
write.csv(plot5_mx_power, "plot5_mx_power_estimates.csv", row.names = TRUE)
write.csv(plot5_mx_estimates, "plot5_mx_parameter_estimates.csv", row.names = TRUE)
write.csv(plot5_gee_power, "plot5_gee_power_estimates.csv", row.names = TRUE)
write.csv(plot5_gee_estimates, "plot5_gee_parameter_estimates.csv", row.names = TRUE)
mx_power5 <- read.csv("plot5_mx_power_estimates.csv")
gee_power5 <- read.csv("plot5_gee_power_estimates.csv")
View(mx_power5)
p3_gee_data <- gee_power5 %>%
dplyr::filter(PGS == .10) %>%
dplyr::select("g", "b", "p3") %>%
mutate(Variable = "CT") %>%
rename("True Parameter" = "g", "Other covAC Source" = "b", "Power" = "p3")
library(tidyverse)
p3_gee_data <- gee_power5 %>%
dplyr::filter(PGS == .10) %>%
dplyr::select("g", "b", "p3") %>%
mutate(Variable = "CT") %>%
rename("True Parameter" = "g", "Other covAC Source" = "b", "Power" = "p3")
p4_gee_data <- gee_power5 %>%
dplyr::filter(PGS == .10) %>%
dplyr::select("b", "g", "p4") %>%
mutate(Variable = "SI") %>%
rename("True Parameter" = "b", "Other covAC Source" = "g", "Power" = "p4")
gee_combi_data <- rbind(p3_gee_data, p4_gee_data) %>%
mutate(Method = "Gee",
Label = paste0(Method, " (Other Source: ", `Other covAC Source`, ")"))
p3_mx_data <- mx_power5 %>%
dplyr::filter(PGS == .10) %>%
dplyr::select("g", "b", "p3") %>%
mutate(Variable = "CT") %>%
rename("True Parameter" = "g", "Other covAC Source" = "b", "Power" = "p3")
p4_mx_data <- mx_power5 %>%
dplyr::filter(PGS == .10) %>%
dplyr::select("b", "g", "p4") %>%
mutate(Variable = "SI") %>%
rename("True Parameter" = "b", "Other covAC Source" = "g", "Power" = "p4")
mx_combi_data <- rbind(p3_mx_data, p4_mx_data) %>%
mutate(Method = "OpenMx",
Label = paste0(Method, " (Other Source: ", `Other covAC Source`, ")"))
full_combi_data <- rbind(mx_combi_data, gee_combi_data)
ct_data <- full_combi_data %>%
dplyr::filter(Variable == "CT")
si_data <- full_combi_data %>%
dplyr::filter(Variable == "SI")
ggplot(data = ct_data, mapping = aes(x = `True Parameter`, y = Power, group = as.factor(Label), color = `Other covAC Source`)) +
geom_point() +
geom_line(aes(linetype = Method)) +
jtools::theme_apa() +
theme(text = element_text(family = "serif")) +
scale_color_viridis_c(name = "Variable")
ct_data <- full_combi_data %>%
dplyr::filter(Variable == "CT", `Other covAC Source` %in% c(0, .05, .1))
si_data <- full_combi_data %>%
dplyr::filter(Variable == "SI", `Other covAC Source` %in% c(0, .05, .1))
ggplot(data = ct_data, mapping = aes(x = `True Parameter`, y = Power, group = as.factor(Label), color = `Other covAC Source`)) +
geom_point() +
geom_line(aes(linetype = Method)) +
jtools::theme_apa() +
theme(text = element_text(family = "serif")) +
scale_color_viridis_c(name = "Variable")
ggplot(data = ct_data, mapping = aes(x = `True Parameter`, y = Power, group = as.factor(Label), color = `Other covAC Source`)) +
geom_point() +
geom_line(aes(linetype = Method)) +
jtools::theme_apa() +
theme(text = element_text(family = "serif")) +
scale_color_viridis_d(name = "Variable")
ggplot(data = ct_data, mapping = aes(x = `True Parameter`, y = Power, group = as.factor(Label), color = as.factor(`Other covAC Source`))) +
geom_point() +
geom_line(aes(linetype = Method)) +
jtools::theme_apa() +
theme(text = element_text(family = "serif")) +
scale_color_viridis_d(name = "Variable")
ggplot(data = si_data, mapping = aes(x = `True Parameter`, y = Power, group = as.factor(Label), color = as.factor(`Other covAC Source`))) +
geom_point() +
geom_line(aes(linetype = Method)) +
jtools::theme_apa() +
theme(text = element_text(family = "serif")) +
scale_color_viridis_d(name = "Variable")
ggplot(data = ct_data, mapping = aes(x = `True Parameter`, y = Power, group = as.factor(Label), color = as.factor(`Other covAC Source`))) +
geom_point() +
geom_line(aes(linetype = Method)) +
jtools::theme_apa() +
theme(text = element_text(family = "serif")) +
scale_color_viridis_d(name = "Variable") +
scale_linetype_manual(values = c("OpenMx" = "solid", "Gee" = "dotted"))
ggplot(data = si_data, mapping = aes(x = `True Parameter`, y = Power, group = as.factor(Label), color = as.factor(`Other covAC Source`))) +
geom_point() +
geom_line(aes(linetype = Method)) +
jtools::theme_apa() +
theme(text = element_text(family = "serif")) +
scale_color_viridis_d(name = "Variable") +
scale_linetype_manual(values = c("OpenMx" = "solid", "Gee" = "dotted"))
??gnomesims::gnome_mx_simulation
??gnomesims::gnome_gee_simulation
gee_data <- gnomesims::gnome_gee_simulation(ct = seq(0,.1,.02), si = seq(0,.1,.02),
nloci = 100,
npgsloci = c(2, 5, 10, 15), cmethod = "exchangeable")
gee_power <- gee_data$power
gee_estimates <- gee_data$params
write.csv(gee_estimates, file = "paper_gee_estimates.csv", row.names = TRUE)
write.csv(gee_power, file = "paper_gee_power.csv", row.names = TRUE)
# Start here if files are already created
paper_power <- read.csv("paper_mx_power.csv")
paper_estimates <- read.csv("paper_mx_estimates.csv")
# Plot 1 - MZ & DZ Power
library(tidyverse)
p1_mx_data <- paper_power %>%
filter(g == 0) %>%
dplyr::select("b", "p1", "PGS") %>%
mutate(Variable = "CT", Sample = "MZ & DZ") %>%
rename(Confounder = b, Power = p1)
p2_mx_data <- paper_power %>%
filter(b == 0) %>%
dplyr::select("g", "p2", 'PGS') %>%
mutate(Variable = "SI", Sample = "MZ & DZ") %>%
rename(Confounder = g, Power = p2)
mx_mzdz_data <- rbind(p1_mx_data, p2_mx_data) %>%
mutate(PGS_percent = factor(scales::percent(PGS), levels = c("2%", "5%", "10%", "15%")))
ggplot(data = mx_mzdz_data, mapping = aes(x = Confounder, y = Power, color = Variable)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
jtools::theme_apa() +
theme(text = element_text(family = "serif"))
# Plot 2 - MZ & DZ vs. DZ-only Power
p5_mx_data <- paper_power %>%
filter(g == 0) %>%
dplyr::select("b", "p5", "PGS") %>%
mutate(Variable = "CT", Sample = "DZ") %>%
rename(Confounder = b, Power = p5)
p6_mx_data <- paper_power %>%
filter(b == 0) %>%
dplyr::select("g", "p6", 'PGS') %>%
mutate(Variable = "SI", Sample = "DZ") %>%
rename(Confounder = g, Power = p6)
mx_dz_data <- rbind(p5_mx_data, p6_mx_data) %>%
mutate(PGS_percent = factor(scales::percent(PGS), levels = c("2%", "5%", "10%", "15%")))
full_mx_data <- rbind(mx_mzdz_data, mx_dz_data)
ggplot(data = full_mx_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Sample)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("DZ" = "dotted", "MZ & DZ" = "solid")) +
jtools::theme_apa() +
theme(text = element_text(family = "serif"))
# Plot 3
ext_estimates <- read.csv("2024-06-04_mx_estimates_ext.csv")
ext_power <- read.csv("2024-06-04_mx_power_ext.csv")
ext_power <- ext_power %>%
rename(`CT` = g, `SI` = b, `CT (m1)` = p1,
`SI (m2)` = p2, `CT (m3)` = p3, `SI (m3)` = p4)
data_noCT <- ext_power[ext_power$CT == 0, ]
# Gather the data for plotting
data_noCT_long <- gather(data_noCT, key = "variable", value = "value",`CT (m1)`, `SI (m2)`, `CT (m3)`, `SI (m3)`)
# Create the plot
ggplot(data_noCT_long, aes(x = SI, y = value, color = variable)) +
geom_line() +
geom_point() +
labs(title = NULL,
x = "Sibling Interaction",
y = "Power",
color = "Parameter") +
jtools::theme_apa() +
theme(text = element_text(family = "serif")) +
scale_color_viridis_d(name = "variable")
# Plot 4
# Filter the data for b = 0
data_noSI <- ext_power[ext_power$SI== 0, ]
# Gather the data for plotting
data_noSI_long <- gather(data_noSI, key = "variable", value = "value", `CT (m1)`, `SI (m2)`, `CT (m3)`, `SI (m3)`)
# Create the plot
ggplot(data_noSI_long, aes(x = CT, y = value, color = variable)) +
geom_line() +
geom_point() +
labs(title = NULL,
x = "Cultural Transmission",
y = "Power",
color = "Parameter") +
jtools::theme_apa() +
theme(text = element_text(family = "serif")) +
scale_color_viridis_d(name = "variable")
# Plot 5 - old version
gee_power <- read.csv("paper_gee_power.csv")
gee_est <- read.csv("paper_gee_estimates.csv")
p1_gee_data <- gee_power %>%
filter(g == 0) %>%
dplyr::select("b", "p1", "PGS") %>%
mutate(Variable = "CT", Sample = "MZ & DZ") %>%
rename(Confounder = b, Power = p1)
p2_gee_data <- gee_power %>%
filter(b == 0) %>%
dplyr::select("g", "p2", 'PGS') %>%
mutate(Variable = "SI", Sample = "MZ & DZ") %>%
rename(Confounder = g, Power = p2)
gee_mzdz_data <- rbind(p1_gee_data, p2_gee_data) %>%
mutate(PGS_percent = factor(scales::percent(PGS), levels = c("2%", "5%", "10%", "15%"))) %>%
mutate(Method = "Gee")
mx_mzdz_data <- mx_mzdz_data %>%
mutate(Method = "OpenMx")
full_method_data <- rbind(mx_mzdz_data, gee_mzdz_data)
ggplot(data = full_method_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Method)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
jtools::theme_apa() +
theme(text = element_text(family = "serif"))
# Correlations
cor_vec <- diag(cor(paper_power[,12:19], gee_power[,12:19]))
print(round(cor_vec, 4))
# Scatterplots
vars <- paste0("p", 1:8)
for (var in vars) {
p <- ggplot() +
geom_point(aes_string(x = paste0("paper_power$", var), y = paste0("gee_power$", var), color = "paper_power$g")) +
labs(
title = paste("Scatterplot of", var, "vs", var),
x = paste("OpenMx", var),
y = paste("Gee", var)
) +
theme_minimal() +
scale_color_viridis_c(name = "Group")
print(p)
}
# Scatterlots only with p1
for (var in vars) {
p <- ggplot() +
geom_point(aes_string(x = paste0("paper_power$", var), y = gee_power$p1, color = "paper_power$g")) +
labs(
title = paste("Scatterplot of", var, "vs p1"),
x = paste("OpenMx", var),
y = paste("Gee 1")
) +
theme_minimal() +
scale_color_viridis_c(name = "Group")
print(p)
}
# Plot 5 - new version
plot5_mx_data <- gnomesims::gnome_mx_simulation(ct = seq(0,.1,.025), si = seq(0,.1,.025),
nloci = 100,
npgsloci = c(2, 5, 10, 15))
=======
>>>>>>> Stashed changes
