theme_light()
View(app_mx_power)
library(tidyverse)
# Appendix data
app_mx_estimates <- read.csv("2024-05-08_mx_estimates_appendix.csv")
app_mx_power <- read.csv("2024-05-08_mx_power_appendix.csv")
app_gee_estimates <- read.csv("2024-05-08_gee_estimates_appendix.csv")
app_gee_power <- read.csv("2024-05-08_gee_power_appendix.csv")
# Create dataset for gee results
p5_data <- app_gee_power %>%
filter(g == 0, round(a^2, 3) == .4) %>%
select("b", "p5", 'PGS') %>%
mutate(Variable = "CT")
p6_data <- app_gee_power %>%
filter(b == 0, round(a^2, 3) == .4) %>%
select("g", "p6", 'PGS') %>%
mutate(Variable = "SI")
colnames(p5_data)[1:2] <- c("Confounder", "Power")
colnames(p6_data)[1:2] <- c("Confounder", "Power")
gee_plot_data <- rbind(p5_data, p6_data) %>%
mutate(Model = "Gee")
# Create same dataset for MX
p1_data_mx <- app_mx_power %>%
filter(g == 0, round(a^2, 3) == .4) %>%
select("b", "p1", 'PGS') %>%
mutate(Variable = "CT")
p2_data_mx <- app_mx_power %>%
filter(b == 0, round(a^2, 3) == .4) %>%
select("g", "p2", 'PGS') %>%
mutate(Variable = "SI")
colnames(p6_data_mx)[1:2] <- c("Confounder", "Power")
colnames(p7_data_mx)[1:2] <- c("Confounder", "Power")
mx_plot_data <- rbind(p6_data_mx, p7_data_mx) %>%
mutate(Model = "OpenMx")
# Combine the two
# Merge the data frames based on Confounder, PGS, and Variable
full_plot_data <- merge(mx_plot_data, gee_plot_data, by = c("Confounder", "PGS", "Variable"), suffixes = c(".OpenMx", ".Gee"))
# Remove the 'Model' column
full_plot_data <- full_plot_data[, !grepl("Model", names(full_plot_data))]
# Plot for only MX results
mx_plot_data %>%
filter(Variable == "CT") %>%
ggplot(data = ., mapping = aes(x = Confounder, y = Power)) +
geom_line() +
geom_point(aes(shape = Variable)) +
facet_wrap(~PGS) +
theme_light()
library(tidyverse)
# Appendix data
app_mx_estimates <- read.csv("2024-05-08_mx_estimates_appendix.csv")
app_mx_power <- read.csv("2024-05-08_mx_power_appendix.csv")
app_gee_estimates <- read.csv("2024-05-08_gee_estimates_appendix.csv")
app_gee_power <- read.csv("2024-05-08_gee_power_appendix.csv")
# Create dataset for gee results
p5_data <- app_gee_power %>%
filter(g == 0, round(a^2, 3) == .4) %>%
select("b", "p5", 'PGS') %>%
mutate(Variable = "CT")
p6_data <- app_gee_power %>%
filter(b == 0, round(a^2, 3) == .4) %>%
select("g", "p6", 'PGS') %>%
mutate(Variable = "SI")
colnames(p5_data)[1:2] <- c("Confounder", "Power")
colnames(p6_data)[1:2] <- c("Confounder", "Power")
gee_plot_data <- rbind(p5_data, p6_data) %>%
mutate(Model = "Gee")
# Create same dataset for MX
p1_data_mx <- app_mx_power %>%
filter(g == 0, round(a^2, 3) == .4) %>%
select("b", "p1", 'PGS') %>%
mutate(Variable = "CT")
p2_data_mx <- app_mx_power %>%
filter(b == 0, round(a^2, 3) == .4) %>%
select("g", "p2", 'PGS') %>%
mutate(Variable = "SI")
colnames(p1_data_mx)[1:2] <- c("Confounder", "Power")
colnames(p2_data_mx)[1:2] <- c("Confounder", "Power")
mx_plot_data <- rbind(p1_data_mx, p2_data_mx) %>%
mutate(Model = "OpenMx")
# Combine the two
# Merge the data frames based on Confounder, PGS, and Variable
full_plot_data <- merge(mx_plot_data, gee_plot_data, by = c("Confounder", "PGS", "Variable"), suffixes = c(".OpenMx", ".Gee"))
# Remove the 'Model' column
full_plot_data <- full_plot_data[, !grepl("Model", names(full_plot_data))]
# Plot for only MX results
ggplot(data = mx_plot_data, mapping = aes(x = Confounder, y = Power)) +
geom_line() +
geom_point(aes(shape = Variable)) +
facet_wrap(~PGS) +
theme_light()
ggplot(data = mx_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable)) +
geom_line() +
geom_point(aes(shape = Variable)) +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, colour = Variable)) +
geom_line(aes(y = Power.Gee)) +
geom_point(aes(shape = Variable)) +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, colour = Variable)) +
geom_line(aes(y = Power.Gee)) +
geom_point(aes(shape = Variable, y = Power.Gee)) +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, colour = Variable)) +
geom_line(aes(y = Power.Gee)) +
geom_point(aes(shape = Variable, y = Power.Gee)) +
geom_line(aes(y = Power.OpenMx)) +
geom_point(aes(shape = Variable, y = Power.OpenMx)) +
facet_wrap(~PGS) +
theme_light()
# Combine the two
# Merge the data frames based on Confounder, PGS, and Variable
full_plot_data <- rbind(mx_plot_data, gee_plot_data)
ggplot(data = full_plot_data, mapping = aes(x = Confounder, colour = Variable)) +
geom_line() +
geom_point() +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable)) +
geom_line() +
geom_point() +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable)) +
geom_line(aes(group = Model)) +
geom_point() +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable)) +
geom_point() +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable + Model)) +
geom_point() +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power)) +
geom_point() +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = interaction(Model, Variable))) +
geom_point() +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = interaction(Model, Variable))) +
geom_point() +
geom_line() +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable)) +
geom_point() +
geom_line() +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_point() +
geom_line() +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_point() +
geom_line() +
facet_wrap(~PGS) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_point() +
geom_line() +
facet_wrap(~PGS) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
scale_color_manual(values = c("CT" = "black", "SI" = "darkgrey"))
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_point() +
geom_line() +
facet_wrap(~PGS) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
scale_color_manual(values = c("CT" = "black", "SI" = "darkgrey")) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_point() +
geom_line() +
facet_wrap(~PGS) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_line() +
geom_point() +
facet_wrap(~PGS) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_line(size = 3) +
geom_point() +
facet_wrap(~PGS) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_line(linewidth = 3) +
geom_point() +
facet_wrap(~PGS) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_line(linewidth = 1) +
geom_point() +
facet_wrap(~PGS) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~scales::percent(PGS)) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~scales::percent(order(PGS))) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~scales::percent(PGS)) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
theme_light()
# Combine the two
# Merge the data frames based on Confounder, PGS, and Variable
full_plot_data <- rbind(mx_plot_data, gee_plot_data)
# Plot for only MX results
full_plot_data$PGS_percent <- percent(full_plot_data$PGS)
full_plot_data <- rbind(mx_plot_data, gee_plot_data)
# Plot for only MX results
full_plot_data$PGS_percent <- scales::percent(full_plot_data$PGS)
full_plot_data$PGS_percent <- factor(full_plot_data$PGS_percent, levels = c("2%", "5%", "10%", "15%"))
ggplot(data = mx_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable)) +
geom_line() +
geom_point(aes(shape = Variable)) +
facet_wrap(~PGS) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
theme_light()
ggplot(data = mx_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable)) +
geom_line(linewidth = 0.8) +
geom_point(aes(shape = Variable)) +
facet_wrap(~PGS) +
theme_light()
ggplot(data = mx_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable)) +
geom_line(linewidth = 0.8) +
geom_point(aes(shape = Variable)) +
facet_wrap(~PGS_percent) +
theme_light()
# Plot for only MX results
full_plot_data$PGS_percent <- scales::percent(full_plot_data$PGS)
full_plot_data$PGS_percent <- factor(full_plot_data$PGS_percent, levels = c("2%", "5%", "10%", "15%"))
mx_plot_data$PGS_percent <- scales::percent(full_plot_data$PGS)
# Plot for only MX results
full_plot_data$PGS_percent <- scales::percent(full_plot_data$PGS)
full_plot_data$PGS_percent <- factor(full_plot_data$PGS_percent, levels = c("2%", "5%", "10%", "15%"))
mx_plot_data$PGS_percent <- scales::percent(mx_plot_data$PGS)
mx_plot_data$PGS_percent <- factor(mx_plot_data$PGS_percent, levels = c("2%", "5%", "10%", "15%"))
ggplot(data = mx_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable)) +
geom_line(linewidth = 0.8) +
geom_point(aes(shape = Variable)) +
facet_wrap(~PGS_percent) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
theme_light()
library(tidyverse)
# Appendix data
app_mx_estimates <- read.csv("2024-05-08_mx_estimates_appendix.csv")
app_mx_power <- read.csv("2024-05-08_mx_power_appendix.csv")
app_gee_estimates <- read.csv("2024-05-08_gee_estimates_appendix.csv")
app_gee_power <- read.csv("2024-05-08_gee_power_appendix.csv")
# Create dataset for gee results
p5_data <- app_gee_power %>%
filter(g == 0, round(a^2, 3) == .4) %>%
select("b", "p5", 'PGS') %>%
mutate(Variable = "CT")
p6_data <- app_gee_power %>%
filter(b == 0, round(a^2, 3) == .4) %>%
select("g", "p6", 'PGS') %>%
mutate(Variable = "SI")
colnames(p5_data)[1:2] <- c("Confounder", "Power")
colnames(p6_data)[1:2] <- c("Confounder", "Power")
gee_plot_data <- rbind(p5_data, p6_data) %>%
mutate(Model = "Gee")
# Create same dataset for MX
p1_data_mx <- app_mx_power %>%
filter(g == 0, round(a^2, 3) == .4) %>%
select("b", "p1", 'PGS') %>%
mutate(Variable = "CT")
p2_data_mx <- app_mx_power %>%
filter(b == 0, round(a^2, 3) == .4) %>%
select("g", "p2", 'PGS') %>%
mutate(Variable = "SI")
colnames(p1_data_mx)[1:2] <- c("Confounder", "Power")
colnames(p2_data_mx)[1:2] <- c("Confounder", "Power")
mx_plot_data <- rbind(p1_data_mx, p2_data_mx) %>%
mutate(Model = "OpenMx")
# Combine the two
# Merge the data frames based on Confounder, PGS, and Variable
full_plot_data <- rbind(mx_plot_data, gee_plot_data)
# Plot for only MX results
full_plot_data$PGS_percent <- scales::percent(full_plot_data$PGS)
full_plot_data$PGS_percent <- factor(full_plot_data$PGS_percent, levels = c("2%", "5%", "10%", "15%"))
mx_plot_data$PGS_percent <- scales::percent(mx_plot_data$PGS)
mx_plot_data$PGS_percent <- factor(mx_plot_data$PGS_percent, levels = c("2%", "5%", "10%", "15%"))
ggplot(data = mx_plot_data, mapping = aes(x = Confounder, y = Power, colour = Variable)) +
geom_line(linewidth = 0.8) +
geom_point(aes(shape = Variable)) +
facet_wrap(~PGS_percent) +
theme_light()
ggplot(data = full_plot_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Model)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
theme_light()
library(tidyverse)
# Appendix data
app_mx_estimates <- read.csv("2024-05-08_mx_estimates_appendix.csv")
app_mx_power <- read.csv("2024-05-08_mx_power_appendix.csv")
app_gee_estimates <- read.csv("2024-05-08_gee_estimates_appendix.csv")
app_gee_power <- read.csv("2024-05-08_gee_power_appendix.csv")
View(app_gee_estimates)
?gnomesims
??gnome_effect
library(gnomesims)
install.packages('gnomesims')
install.packages("gnomesims")
update.packages('gnomesims')
?gnome_effect
rm(list = ls())
detach("package:gnomesims", unload = TRUE)
library(gnomesims)
packages(gnomesims)
library(gnomesims)
?gnome_effect
gnome_effect <- function(a, c, e, g, b) {
vA = 1
vC = 1
vE = 1
smz = 2*(g+a/2+b/2)**2*vA+(a*vA/2+b*vA/2)*a+(a*vA/2+b*vA/2)*b+c**2*vC+e**2*vE
sdz = 2*(g+a/2+b/2)**2*vA+a**2*vA/2+b**2*vA/2+c**2*vC+e**2*vE
# Variance Increase
effect_mz <- smz - 1
effect_dz <- sdz - 1
effect = list(mz = effect_mz, dz = effect_dz)
return(effect)
}
app_mx_estimates %>%
mutate(Smz = gnome_effect(a, c, e, g, b)$mz,
Sdz = gnome_effect(a, c, e, g, b)$dz)
library(tidyverse)
# library(gnomesims)
# Appendix data
app_mx_estimates <- read.csv("2024-05-08_mx_estimates_appendix.csv")
app_mx_power <- read.csv("2024-05-08_mx_power_appendix.csv")
app_gee_estimates <- read.csv("2024-05-08_gee_estimates_appendix.csv")
app_gee_power <- read.csv("2024-05-08_gee_power_appendix.csv")
# Manually define function
gnome_effect <- function(a, c, e, g, b) {
vA = 1
vC = 1
vE = 1
smz = 2*(g+a/2+b/2)**2*vA+(a*vA/2+b*vA/2)*a+(a*vA/2+b*vA/2)*b+c**2*vC+e**2*vE
sdz = 2*(g+a/2+b/2)**2*vA+a**2*vA/2+b**2*vA/2+c**2*vC+e**2*vE
# Variance Increase
effect_mz <- smz - 1
effect_dz <- sdz - 1
effect = list(mz = effect_mz, dz = effect_dz)
return(effect)
}
app_mx_estimates %>%
mutate(Smz = gnome_effect(a, c, e, g, b)$mz,
Sdz = gnome_effect(a, c, e, g, b)$dz)
library(scales)
app_mx_estimates %>%
mutate(Smz = round(percent(gnome_effect(a, c, e, g, b)$mz), 2),
Sdz = round(percent(gnome_effect(a, c, e, g, b)$dz), 2))
app_mx_estimates %>%
mutate(Smz = percent(round(gnome_effect(a, c, e, g, b)$mz), 4),
Sdz = percent(round(gnome_effect(a, c, e, g, b)$dz), 4))
app_mx_estimates %>%
mutate(Smz = round(gnome_effect(a, c, e, g, b)$mz),
Sdz = round(gnome_effect(a, c, e, g, b)$dz))
gnome_effect(a = .4, c = .3, e = .3, g = 0, b = .05)
gnome_effect <- function(a, c, e, g, b) {
vA = 1
vC = 1
vE = 1
smz = 2*(g+a/2+b/2)**2*vA+(a*vA/2+b*vA/2)*a+(a*vA/2+b*vA/2)*b+c**2*vC+e**2*vE
sdz = 2*(g+a/2+b/2)**2*vA+a**2*vA/2+b**2*vA/2+c**2*vC+e**2*vE
# Variance Increase
effect_mz <- smz - 1
effect_dz <- sdz - 1
effect = list(mz = effect_mz, dz = effect_dz)
return(effect)
}
gnome_effect(a = .4, c = .3, e = .3, g = 0, b = .05)
gnome_effect(a = sqrt(.4), c = sqrt(.3), e = sqrt(.3), g = sqrt(0), b = sqrt(.05))
library(tidyverse)
library(scales)
library(gnomesims)
# Appendix data
app_mx_estimates <- read.csv("2024-05-08_mx_estimates_appendix.csv")
app_mx_power <- read.csv("2024-05-08_mx_power_appendix.csv")
app_gee_estimates <- read.csv("2024-05-08_gee_estimates_appendix.csv")
app_gee_power <- read.csv("2024-05-08_gee_power_appendix.csv")
app_mx_estimates %>%
mutate(Smz = round(gnome_effect(a, c, e, g, b)$mz, 4),
Sdz = round(gnome_effect(a, c, e, g, b)$dz, 4))
app_mx_estimates %>%
mutate(Smz = percent(round(gnome_effect(a, c, e, g, b)$mz, 4)),
Sdz = percent(round(gnome_effect(a, c, e, g, b)$dz, 4)))
app_mx_estimates %>%
select(-X) %>%
mutate(Smz = percent(round(gnome_effect(a, c, e, g, b)$mz, 4)),
Sdz = percent(round(gnome_effect(a, c, e, g, b)$dz, 4)))
app_mx_power %>%
select(-X) %>%
mutate(Smz = percent(round(gnome_effect(a, c, e, g, b)$mz, 4)),
Sdz = percent(round(gnome_effect(a, c, e, g, b)$dz, 4)))
app_gee_estimates %>%
select(-X) %>%
mutate(Smz = percent(round(gnome_effect(a, c, e, g, b)$mz, 4)),
Sdz = percent(round(gnome_effect(a, c, e, g, b)$dz, 4)))
app_gee_power %>%
select(-X) %>%
mutate(Smz = percent(round(gnome_effect(a, c, e, g, b)$mz, 4)),
Sdz = percent(round(gnome_effect(a, c, e, g, b)$dz, 4)))
library(gnomesims)
library(rm = ls())
rm(list = ls())
library(tidyverse)
library(scales)
library(gnomesims)
# Appendix data
app_mx_estimates <- read.csv("2024-05-08_mx_estimates_appendix.csv")
app_mx_power <- read.csv("2024-05-08_mx_power_appendix.csv")
app_gee_estimates <- read.csv("2024-05-08_gee_estimates_appendix.csv")
app_gee_power <- read.csv("2024-05-08_gee_power_appendix.csv")
app_mx_estimates <- app_mx_estimates %>%
select(-X) %>%
mutate(Smz = percent(round(gnome_effect(a, c, e, g, b)$mz, 4)),
Sdz = percent(round(gnome_effect(a, c, e, g, b)$dz, 4)))
app_mx_power <- app_mx_power %>%
select(-X) %>%
mutate(Smz = percent(round(gnome_effect(a, c, e, g, b)$mz, 4)),
Sdz = percent(round(gnome_effect(a, c, e, g, b)$dz, 4)))
app_gee_estimates <- app_gee_estimates %>%
select(-X) %>%
mutate(Smz = percent(round(gnome_effect(a, c, e, g, b)$mz, 4)),
Sdz = percent(round(gnome_effect(a, c, e, g, b)$dz, 4)))
app_gee_power <- app_gee_power %>%
select(-X) %>%
mutate(Smz = percent(round(gnome_effect(a, c, e, g, b)$mz, 4)),
Sdz = percent(round(gnome_effect(a, c, e, g, b)$dz, 4)))
View(app_gee_estimates)
?gnome_effect
?gnomesims::gnome_effect
devtools::load_all(".")
app_mx_estimates <- app_mx_estimates %>%
select(-X) %>%
mutate(Smz = percent(round(gnome_effect(a, c, e, g, b)$mz, 4)),
Sdz = percent(round(gnome_effect(a, c, e, g, b)$dz, 4)))
library(tidyverse)
library(scales)
library(gnomesims)
# Appendix data
app_mx_estimates <- read.csv("2024-05-08_mx_estimates_appendix.csv")
app_mx_power <- read.csv("2024-05-08_mx_power_appendix.csv")
app_gee_estimates <- read.csv("2024-05-08_gee_estimates_appendix.csv")
app_gee_power <- read.csv("2024-05-08_gee_power_appendix.csv")
app_mx_estimates <- app_mx_estimates %>%
select(-X) %>%
mutate(Smz = percent(round(gnome_effect(a, c, e, g, b)$mz, 4)),
Sdz = percent(round(gnome_effect(a, c, e, g, b)$dz, 4)))
app_mx_power <- app_mx_power %>%
select(-X) %>%
mutate(Smz = percent(round(gnome_effect(a, c, e, g, b)$mz, 4)),
Sdz = percent(round(gnome_effect(a, c, e, g, b)$dz, 4)))
app_gee_estimates <- app_gee_estimates %>%
select(-X) %>%
mutate(Smz = percent(round(gnome_effect(a, c, e, g, b)$mz, 4)),
Sdz = percent(round(gnome_effect(a, c, e, g, b)$dz, 4)))
app_gee_power <- app_gee_power %>%
select(-X) %>%
mutate(Smz = percent(round(gnome_effect(a, c, e, g, b)$mz, 4)),
Sdz = percent(round(gnome_effect(a, c, e, g, b)$dz, 4)))
write.csv(app_mx_estimates, file = "2024-05-13_app_mx_estimates.csv")
write.csv(app_mx_power, file = "2024-05-13_app_mx_power.csv")
write.csv(app_gee_estimates, file = "2024-05-13_app_gee_estimates.csv")
write.csv(app_gee_power, file = "2024-05-13_app_gee_power.csv")
View(app_gee_estimates)
