<<<<<<< Updated upstream
# Create the plot
ggplot(data = full_mzdz_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Method)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
=======
# Gather the data for plotting
data_noSI_long <- gather(data_noSI, key = "variable", value = "value", "Cultural Transmission Only", "Sibling Interaction Only",
"Combined Model - Cultural Transmission", "Combined Model - Sibling Interaction")
data_noSI_long$variable <- factor(data_noSI_long$variable,
levels = c("Cultural Transmission Only", "Sibling Interaction Only",
"Combined Model - Cultural Transmission", "Combined Model - Sibling Interaction"))
# Create the plot
ggplot(data_noSI_long, aes(x = CT, y = value, color = variable)) +
geom_line() +
geom_point() +
labs(title = NULL,
x = "Cultural Transmission",
y = "Power",
color = "Parameter") +
>>>>>>> Stashed changes
jtools::theme_apa() +
theme(text = element_text(family = "serif")) +
scale_color_viridis_d(name = "variable")
# Create the plot
<<<<<<< Updated upstream
ggplot(data = full_mzdz_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Method)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
jtools::theme_apa() +
theme_minimal()
ggplot(data = full_mx_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Sample)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("DZ" = "dotted", "MZ & DZ" = "solid")) +
theme_minimal()
# Create the plot
ggplot(data = full_mzdz_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Method)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
jtools::theme_apa() +
theme_minimal()
full_mx_data %>%
full_mx_data %>%
filter(Sample == "MZ & DZ")
filter(full_mx_data, Sample == "MZ & DZ") %>%
filter(full_mx_data, Sample == "MZ & DZ")
filter(full_mzdz_data, Sample == "MZ & DZ") %>%
theme_minimal()
View(full_mx_data)
filter(full_mzdz_data, Sample == "MZ & DZ") %>%
ggplot(data = ., mapping = aes(x = Confounder, y = Power, color = Variable)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
theme_minimal()
ggplot(data = full_mx_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Sample)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("DZ" = "dotted", "MZ & DZ" = "solid")) +
scale_fill_manual("red", "blue") +
theme_minimal()
ggplot(data = full_mx_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Sample)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("DZ" = "dotted", "MZ & DZ" = "solid")) +
scale_fill_manual(c("red", "blue")) +
theme_minimal()
ggplot(data = full_mx_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Sample)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("DZ" = "dotted", "MZ & DZ" = "solid")) +
scale_color_manual(c("red", "blue")) +
theme_minimal()
ggplot(data = full_mx_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Sample)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("DZ" = "dotted", "MZ & DZ" = "solid")) +
scale_fill_discrete(c("red", "blue")) +
theme_minimal()
ggplot(data = full_mx_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Sample)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("DZ" = "dotted", "MZ & DZ" = "solid")) +
scale_color_manual(c("red", "blue")) +
theme_minimal()
ggplot(data = full_mx_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Sample)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("DZ" = "dotted", "MZ & DZ" = "solid")) +
scale_color_manual("red", "blue") +
theme_minimal()
ggplot(data = full_mx_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Sample)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("DZ" = "dotted", "MZ & DZ" = "solid")) +
scale_color_manual(values = c("red", "blue")) +
theme_minimal()
# Create the plot
ggplot(data = full_mzdz_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Method)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
scale_color_manual(values = c("red", "blue")) +
theme_minimal()
filter(full_mzdz_data, Sample == "MZ & DZ") %>%
ggplot(data = ., mapping = aes(x = Confounder, y = Power, color = Variable)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_color_manual(values = c("red", "blue")) +
theme_minimal()
ggplot(data = full_mx_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Sample)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("DZ" = "dotted", "MZ & DZ" = "solid")) +
scale_color_manual(values = c("red", "blue")) +
theme_minimal()
filter(full_mzdz_data, Sample == "MZ & DZ")
filter(full_mzdz_data, Sample == "MZ & DZ", Method = "OpenMx") %>%
ggplot(data = ., mapping = aes(x = Confounder, y = Power, color = Variable)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_color_manual(values = c("red", "blue")) +
theme_minimal()
filter(full_mzdz_data, Sample == "MZ & DZ", Method == "OpenMx") %>%
ggplot(data = ., mapping = aes(x = Confounder, y = Power, color = Variable)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_color_manual(values = c("red", "blue")) +
theme_minimal()
ggplot(data = full_mx_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Sample)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("DZ" = "dotted", "MZ & DZ" = "solid")) +
scale_color_manual(values = c("red", "blue")) +
theme_minimal()
# Create the plot
ggplot(data = full_mzdz_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Method)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("Gee" = "dotted", "OpenMx" = "solid")) +
scale_color_manual(values = c("red", "blue")) +
theme_minimal()
filter(full_mzdz_data, Sample == "MZ & DZ", Method == "OpenMx") %>%
ggplot(data = ., mapping = aes(x = Confounder, y = Power, color = Variable)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_color_manual(values = c("red", "blue")) +
theme_minimal()
ggplot(data = full_mx_data, mapping = aes(x = Confounder, y = Power, color = Variable, linetype = Sample)) +
geom_line(linewidth = 0.8) +
geom_point() +
facet_wrap(~PGS_percent) +
scale_linetype_manual(values = c("DZ" = "dotted", "MZ & DZ" = "solid")) +
scale_color_manual(values = c("red", "blue")) +
=======
ggplot(data_noSI_long, aes(x = CT, y = value, color = variable)) +
geom_line() +
geom_point() +
labs(title = NULL,
x = "Cultural Transmission",
y = "Power",
color = "Parameter") +
theme_minimal()
# Plots powerpoint
ext_estimates <- read.csv("2024-06-04_mx_estimates_ext.csv")
ext_power <- read.csv("2024-06-04_mx_power_ext.csv")
ext_power <- ext_power %>%
rename(`CT` = g, `SI` = b, "Cultural Transmission Only" = p1,
"Sibling Interaction Only" = p2, "Combined Model - Cultural Transmission" = p3, "Combined Model - Sibling Interaction" = p4)
data_noCT <- ext_power[ext_power$CT == 0, ]
# Gather the data for plotting
data_noCT_long <- gather(data_noCT, key = "variable", value = "value","Cultural Transmission Only", "Sibling Interaction Only",
"Combined Model - Cultural Transmission", "Combined Model - Sibling Interaction")
data_noCT_long$variable <- factor(data_noCT_long$variable,
levels = c("Cultural Transmission Only", "Sibling Interaction Only",
"Combined Model - Cultural Transmission", "Combined Model - Sibling Interaction"))
# Create the plot
ggplot(data_noCT_long, aes(x = SI, y = value, color = variable)) +
geom_line() +
geom_point() +
labs(title = NULL,
x = "Sibling Interaction",
y = "Power",
color = "Parameter") +
theme_minimal()
# Plot 4
# Filter the data for b = 0
data_noSI <- ext_power[ext_power$SI == 0, ]
# Gather the data for plotting
data_noSI_long <- gather(data_noSI, key = "variable", value = "value", "Cultural Transmission Only", "Sibling Interaction Only",
"Combined Model - Cultural Transmission", "Combined Model - Sibling Interaction")
data_noSI_long$variable <- factor(data_noSI_long$variable,
levels = c("Cultural Transmission Only", "Sibling Interaction Only",
"Combined Model - Cultural Transmission", "Combined Model - Sibling Interaction"))
# Create the plot
ggplot(data_noSI_long, aes(x = CT, y = value, color = variable)) +
geom_line() +
geom_point() +
labs(title = NULL,
x = "Cultural Transmission",
y = "Power",
color = "Parameter") +
theme_minimal()
# Create the plot
ggplot(data_noCT_long, aes(x = SI, y = value, color = variable)) +
geom_line(size = 1.5) +  # Thicker lines (adjust size as needed)
geom_point(aes(shape = variable), size = 3) +  # Different shapes for each variable
labs(title = NULL,
x = "Sibling Interaction",
y = "Power",
color = "Parameter",
shape = "Parameter") +  # Add label for shapes
theme_minimal()
# Create the plot
ggplot(data_noCT_long, aes(x = SI, y = value, color = variable)) +
geom_line(size = 1.5) +
geom_point(aes(shape = variable), size = 3) +
scale_shape_manual(values = c(16, 17, 18)) +  # Assign specific shapes (circle, triangle, diamond)
labs(title = NULL,
x = "Sibling Interaction",
y = "Power",
color = "Parameter",
shape = "Parameter") +
theme_minimal()
# Create the plot
ggplot(data_noCT_long, aes(x = SI, y = value, color = variable)) +
geom_line(size = 1.5) +
geom_point(aes(shape = variable), size = 3) +
scale_shape_manual(values = c(16, 17, 18, 19)) +  # Assign specific shapes (circle, triangle, diamond)
labs(title = NULL,
x = "Sibling Interaction",
y = "Power",
color = "Parameter",
shape = "Parameter") +
theme_minimal()
# Create the plot
ggplot(data_noSI_long, aes(x = CT, y = value, color = variable)) +
geom_line(size = 1.5) +
geom_point(aes(shape = variable), size = 3) +
scale_shape_manual(values = c(16, 17, 18, 19)) +  # Assign specific shapes (circle, triangle, diamond)
labs(title = NULL,
x = "Cultural Transmission",
y = "Power",
color = "Model",
shape = "Model") +
theme_minimal()
# Create the plot
ggplot(data_noSI_long, aes(x = CT, y = value, color = variable)) +
geom_line(size = 1.5) +
geom_point(aes(shape = variable), size = 3) +
scale_shape_manual(values = c(16, 17, 18, 19)) +  # Assign specific shapes (circle, triangle, diamond)
labs(title = NULL,
x = "Cultural Transmission",
y = "Power",
color = "Model",
shape = "Model") +
scale_color_manual(values = c("red", "blue")) +
theme_minimal()
# Create the plot
ggplot(data_noCT_long, aes(x = SI, y = value, color = variable)) +
geom_line(size = 1.5) +
geom_point(aes(shape = variable), size = 3) +
scale_shape_manual(values = c(16, 17, 18, 19)) +  # Assign specific shapes (circle, triangle, diamond)
labs(title = NULL,
x = "Sibling Interaction",
y = "Power",
color = "Model",
shape = "Model") +
scale_color_manual(values = c("red", "purple", "cyan", "blue")) +
theme_minimal()
# Plot 4
# Filter the data for b = 0
data_noSI <- ext_power[ext_power$SI == 0, ]
# Gather the data for plotting
data_noSI_long <- gather(data_noSI, key = "variable", value = "value", "Cultural Transmission Only", "Sibling Interaction Only",
"Combined Model - Cultural Transmission", "Combined Model - Sibling Interaction")
data_noSI_long$variable <- factor(data_noSI_long$variable,
levels = c("Cultural Transmission Only", "Sibling Interaction Only",
"Combined Model - Cultural Transmission", "Combined Model - Sibling Interaction"))
# Create the plot
ggplot(data_noSI_long, aes(x = CT, y = value, color = variable)) +
geom_line(size = 1.5) +
geom_point(aes(shape = variable), size = 3) +
scale_shape_manual(values = c(16, 17, 18, 19)) +  # Assign specific shapes (circle, triangle, diamond)
labs(title = NULL,
x = "Cultural Transmission",
y = "Power",
color = "Model",
shape = "Model") +
scale_color_manual(values = c("red", "purple", "cyan", "blue")) +
theme_minimal()
# Create the plot
ggplot(data_noSI_long, aes(x = CT, y = value, color = variable)) +
geom_line(size = 1.5) +
geom_point(aes(shape = variable), size = 3) +
scale_shape_manual(values = c(16, 17, 18, 19)) +  # Assign specific shapes (circle, triangle, diamond)
labs(title = NULL,
x = "Cultural Transmission",
y = "Power",
color = "Model",
shape = "Model") +
scale_color_manual(values = c("red", "purple", "turqouise", "blue")) +
theme_minimal()
# Create the plot
ggplot(data_noCT_long, aes(x = SI, y = value, color = variable)) +
geom_line(size = 1.5) +
geom_point(aes(shape = variable), size = 3) +
scale_shape_manual(values = c(16, 17, 18, 19)) +  # Assign specific shapes (circle, triangle, diamond)
labs(title = NULL,
x = "Sibling Interaction",
y = "Power",
color = "Model",
shape = "Model") +
scale_color_manual(values = c("red", "purple", "turquoise", "blue")) +
theme_minimal()
# Plot 4
# Filter the data for b = 0
data_noSI <- ext_power[ext_power$SI == 0, ]
# Gather the data for plotting
data_noSI_long <- gather(data_noSI, key = "variable", value = "value", "Cultural Transmission Only", "Sibling Interaction Only",
"Combined Model - Cultural Transmission", "Combined Model - Sibling Interaction")
data_noSI_long$variable <- factor(data_noSI_long$variable,
levels = c("Cultural Transmission Only", "Sibling Interaction Only",
"Combined Model - Cultural Transmission", "Combined Model - Sibling Interaction"))
# Create the plot
ggplot(data_noSI_long, aes(x = CT, y = value, color = variable)) +
geom_line(size = 1.5) +
geom_point(aes(shape = variable), size = 3) +
scale_shape_manual(values = c(16, 17, 18, 19)) +  # Assign specific shapes (circle, triangle, diamond)
labs(title = NULL,
x = "Cultural Transmission",
y = "Power",
color = "Model",
shape = "Model") +
scale_color_manual(values = c("red", "purple", "turqouise", "blue")) +
theme_minimal()
# Create the plot
ggplot(data_noSI_long, aes(x = CT, y = value, color = variable)) +
geom_line(size = 1.5) +
geom_point(aes(shape = variable), size = 3) +
scale_shape_manual(values = c(16, 17, 18, 19)) +  # Assign specific shapes (circle, triangle, diamond)
labs(title = NULL,
x = "Cultural Transmission",
y = "Power",
color = "Model",
shape = "Model") +
scale_color_manual(values = c("red", "purple", "turquoise", "blue")) +
theme_minimal()
# Create the plot
ggplot(data_noSI_long, aes(x = CT, y = value, color = variable)) +
geom_point(aes(shape = variable), size = 3) +
scale_shape_manual(values = c(16, 17, 18, 19)) +  # Assign specific shapes (circle, triangle, diamond)
labs(title = NULL,
x = "Cultural Transmission",
y = "Power",
color = "Model",
shape = "Model") +
scale_color_manual(values = c("red", "purple", "turquoise", "blue")) +
theme_minimal()
# Create the plot
ggplot(data_noSI_long, aes(x = CT, y = value, color = variable)) +
geom_line() +
geom_point(aes(shape = variable), size = 3) +
scale_shape_manual(values = c(16, 17, 18, 19)) +  # Assign specific shapes (circle, triangle, diamond)
labs(title = NULL,
x = "Cultural Transmission",
y = "Power",
color = "Model",
shape = "Model") +
scale_color_manual(values = c("red", "purple", "turquoise", "blue")) +
theme_minimal()
# Create the plot
ggplot(data_noSI_long, aes(x = CT, y = value, color = variable)) +
geom_line(size = 1.5) +
geom_point(aes(shape = variable), size = 3) +
scale_shape_manual(values = c(16, 17, 18, 19)) +  # Assign specific shapes (circle, triangle, diamond)
labs(title = NULL,
x = "Cultural Transmission",
y = "Power",
color = "Model",
shape = "Model") +
scale_color_manual(values = c("red", "purple", "turquoise", "blue")) +
theme_minimal()
# Create the plot
ggplot(data_noSI_long, aes(x = CT, y = value, color = variable)) +
geom_line(size = 1.2) +
geom_point(aes(shape = variable), size = 3) +
scale_shape_manual(values = c(16, 17, 18, 19)) +  # Assign specific shapes (circle, triangle, diamond)
labs(title = NULL,
x = "Cultural Transmission",
y = "Power",
color = "Model",
shape = "Model") +
scale_color_manual(values = c("red", "purple", "turquoise", "blue")) +
theme_minimal()
# Create the plot
ggplot(data_noSI_long, aes(x = CT, y = value, color = variable)) +
geom_line(size = 1) +
geom_point(aes(shape = variable), size = 3) +
scale_shape_manual(values = c(16, 17, 18, 19)) +  # Assign specific shapes (circle, triangle, diamond)
labs(title = NULL,
x = "Cultural Transmission",
y = "Power",
color = "Model",
shape = "Model") +
scale_color_manual(values = c("red", "purple", "turquoise", "blue")) +
theme_minimal()
# Create the plot
ggplot(data_noSI_long, aes(x = CT, y = value, color = variable)) +
geom_line(size = 1) +
geom_point(aes(shape = variable), size = 2) +
scale_shape_manual(values = c(16, 17, 18, 19)) +  # Assign specific shapes (circle, triangle, diamond)
labs(title = NULL,
x = "Cultural Transmission",
y = "Power",
color = "Model",
shape = "Model") +
scale_color_manual(values = c("red", "purple", "turquoise", "blue")) +
theme_minimal()
# Create the plot
ggplot(data_noCT_long, aes(x = SI, y = value, color = variable)) +
geom_line(size = 1) +
geom_point(aes(shape = variable), size = 2) +
scale_shape_manual(values = c(16, 17, 18, 19)) +  # Assign specific shapes (circle, triangle, diamond)
labs(title = NULL,
x = "Sibling Interaction",
y = "Power",
color = "Model",
shape = "Model") +
scale_color_manual(values = c("red", "purple", "turquoise", "blue")) +
theme_minimal()
# Create the plot
ggplot(data_noCT_long, aes(x = SI, y = value, color = variable)) +
geom_line(size = 1.2) +
geom_point(aes(shape = variable), size = 2) +
scale_shape_manual(values = c(16, 17, 18, 19)) +  # Assign specific shapes (circle, triangle, diamond)
labs(title = NULL,
x = "Sibling Interaction",
y = "Power",
color = "Model",
shape = "Model") +
scale_color_manual(values = c("red", "purple", "turquoise", "blue")) +
theme_minimal()
# Create the plot
ggplot(data_noCT_long, aes(x = SI, y = value, color = variable)) +
geom_line(size = 1.1) +
geom_point(aes(shape = variable), size = 2) +
scale_shape_manual(values = c(16, 17, 18, 19)) +  # Assign specific shapes (circle, triangle, diamond)
labs(title = NULL,
x = "Sibling Interaction",
y = "Power",
color = "Model",
shape = "Model") +
scale_color_manual(values = c("red", "purple", "turquoise", "blue")) +
theme_minimal()
# Create the plot
ggplot(data_noCT_long, aes(x = SI, y = value, color = variable)) +
geom_line(size = 1.1) +
geom_point(aes(shape = variable), size = 2) +
scale_shape_manual(values = c(16, 17, 18, 19)) +  # Assign specific shapes (circle, triangle, diamond)
labs(title = NULL,
x = "Sibling Interaction",
y = "Power",
color = "Parameter",
shape = "Parameter") +
scale_color_manual(values = c("red", "purple", "turquoise", "blue")) +
theme_minimal()
# Plot 4
# Filter the data for b = 0
data_noSI <- ext_power[ext_power$SI == 0, ]
# Gather the data for plotting
data_noSI_long <- gather(data_noSI, key = "variable", value = "value", "Cultural Transmission Only", "Sibling Interaction Only",
"Combined Model - Cultural Transmission", "Combined Model - Sibling Interaction")
data_noSI_long$variable <- factor(data_noSI_long$variable,
levels = c("Cultural Transmission Only", "Sibling Interaction Only",
"Combined Model - Cultural Transmission", "Combined Model - Sibling Interaction"))
# Create the plot
ggplot(data_noSI_long, aes(x = CT, y = value, color = variable)) +
geom_line(size = 1.1) +
geom_point(aes(shape = variable), size = 2) +
scale_shape_manual(values = c(16, 17, 18, 19)) +  # Assign specific shapes (circle, triangle, diamond)
labs(title = NULL,
x = "Cultural Transmission",
y = "Power",
color = "Parameter",
shape = "Parameter") +
scale_color_manual(values = c("red", "purple", "turquoise", "blue")) +
>>>>>>> Stashed changes
theme_minimal()
